<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:metrics="http://www.ryantenney.com/schema/metrics"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.ryantenney.com/schema/metrics
        http://www.ryantenney.com/schema/metrics/metrics.xsd">

	<!-- Creates a MetricRegistry bean -->
    <metrics:metric-registry id="metricRegistry" />

    <!-- Registers BeanPostProcessors with Spring which proxy beans and capture metrics -->
    <!-- Include this once per context (once in the parent context and in any subcontexts) -->
    <metrics:annotation-driven metric-registry="metricRegistry" />

    <!-- Example reporter definiton. Supported reporters include jmx, slf4j, graphite, and others. -->
    <!-- Reporters should be defined only once, preferably in the parent context -->
    <!-- <metrics:reporter type="console" metric-registry="metricRegistry" period="1440m" /> -->

    <!-- Register metric beans (Optional) -->
    <!-- The metrics in this example require metrics-jvm -->
    <metrics:register metric-registry="metricRegistry">
        <bean metrics:name="jvm.gc" class="com.codahale.metrics.jvm.GarbageCollectorMetricSet" />
        <bean metrics:name="jvm.memory" class="com.codahale.metrics.jvm.MemoryUsageGaugeSet" />
        <bean metrics:name="jvm.thread-states" class="com.codahale.metrics.jvm.ThreadStatesGaugeSet" />
        <bean metrics:name="jvm.fd.usage" class="com.codahale.metrics.jvm.FileDescriptorRatioGauge" />
    </metrics:register>
    
	<aop:aspectj-autoproxy/>

	<context:annotation-config />
	<context:component-scan base-package="es.caib.notib.core.service" />
	<context:component-scan base-package="es.caib.notib.core.helper" />
	<context:component-scan base-package="es.caib.notib.core.cacheable" />
	<context:component-scan base-package="es.caib.notib.core.aspect" />
	<context:component-scan base-package="es.caib.notib.core.test" />
	<context:component-scan base-package="es.caib.notib.core.config" />

	<jpa:repositories base-package="es.caib.notib.core.repository" />

	<jpa:auditing auditor-aware-ref="auditorAwareBean" />
	<bean name="auditorAwareBean" class="es.caib.notib.core.audit.NotibAuditorAware"/>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Cache -->
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager">
			<ref bean="ehcache"/>
		</property>
	</bean>
	<cache:annotation-driven cache-manager="cacheManager"/>
	<!-- /Cache -->
	<!-- E-mail -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="session" ref="mailSession"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	<!-- /E-mail -->
	<!-- Execució de tasques periòdiques -->
	<task:annotation-driven scheduler="taskScheduler"/>
	<task:scheduler id="taskScheduler" pool-size="10"/>
	<!-- /Execució de tasques periòdiques -->

	<!-- Consola Groovy -->
	<!--bean id="groovyShellService" class="es.caib.notib.core.console.GroovyShellService" init-method="initialize" destroy-method="destroy">
		<property name="socket" value="6789" />
		<property name="launchAtStart" value="true" />
		<property name="bindings">
			<map>
				
			</map>
		</property>
	</bean-->
	<!-- /Consola Groovy -->

</beans>
