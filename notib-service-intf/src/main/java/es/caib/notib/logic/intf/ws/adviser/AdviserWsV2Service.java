
package es.caib.notib.logic.intf.ws.adviser;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AdviserWsV2Service", targetNamespace = "http://administracionelectronica.gob.es/notifica/ws/adviserwsv2/1.0/", wsdlLocation = "file:/home/siona/git/notib/notib-core/src/main/resources/es/caib/notib/core/wsdl/AdviserWsV2.wsdl")
public class AdviserWsV2Service
    extends Service
{

    private final static URL ADVISERWSV2SERVICE_WSDL_LOCATION;
    private final static WebServiceException ADVISERWSV2SERVICE_EXCEPTION;
    private final static QName ADVISERWSV2SERVICE_QNAME = new QName("http://administracionelectronica.gob.es/notifica/ws/adviserwsv2/1.0/", "AdviserWsV2Service");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/siona/git/notib/notib-core/src/main/resources/es/caib/notib/core/wsdl/AdviserWsV2.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ADVISERWSV2SERVICE_WSDL_LOCATION = url;
        ADVISERWSV2SERVICE_EXCEPTION = e;
    }

    public AdviserWsV2Service() {
        super(__getWsdlLocation(), ADVISERWSV2SERVICE_QNAME);
    }

    public AdviserWsV2Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), ADVISERWSV2SERVICE_QNAME, features);
    }

    public AdviserWsV2Service(URL wsdlLocation) {
        super(wsdlLocation, ADVISERWSV2SERVICE_QNAME);
    }

    public AdviserWsV2Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ADVISERWSV2SERVICE_QNAME, features);
    }

    public AdviserWsV2Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdviserWsV2Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AdviserWsV2PortType
     */
    @WebEndpoint(name = "AdviserWsV2Port")
    public AdviserWsV2PortType getAdviserWsV2Port() {
        return super.getPort(new QName("http://administracionelectronica.gob.es/notifica/ws/adviserwsv2/1.0/", "AdviserWsV2Port"), AdviserWsV2PortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdviserWsV2PortType
     */
    @WebEndpoint(name = "AdviserWsV2Port")
    public AdviserWsV2PortType getAdviserWsV2Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://administracionelectronica.gob.es/notifica/ws/adviserwsv2/1.0/", "AdviserWsV2Port"), AdviserWsV2PortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ADVISERWSV2SERVICE_EXCEPTION!= null) {
            throw ADVISERWSV2SERVICE_EXCEPTION;
        }
        return ADVISERWSV2SERVICE_WSDL_LOCATION;
    }

}
